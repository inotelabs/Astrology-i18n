---
import MainLayout from '@/layouts/MainLayout.astro';
import BaseHeader from '@/ui/BaseHeader.astro';
import Prose from '@/features/Prose.astro';
import { Image } from 'astro:assets';
import authorAvatar from '@/assets/author.avif';
import type { Lang } from '@/utils/i18n';
import { t, categoryLabel as i18nCategoryLabel, categorySlug } from '@/utils/translations';
import { formatDate } from '@/utils/date';
import { getRelativeLocaleUrl } from 'astro:i18n';

interface Props {
  lang?: Lang;
  title: string;
  description?: string;
  image?: string;
  imageAlt?: string;
  canonical?: string;
  noindex?: boolean;
  publishedTime?: string | Date | undefined;
  modifiedTime?: string | Date | undefined;
  author?: string;
  authorUrl?: string;
  section?: string;
  tags?: string[];
  noProse?: boolean;
}

const {
  lang: langProp = 'zh',
  title,
  description,
  image,
  imageAlt,
  canonical,
  noindex,
  publishedTime,
  modifiedTime,
  author,
  authorUrl,
  section,
  tags = [],
} = Astro.props as Props;
const resolvedLang = ((Astro.currentLocale as Lang | undefined) ??
  (langProp as Lang | undefined) ??
  'zh') as Lang;

const fmt = (d?: string | Date) => formatDate(d, resolvedLang);

const categoryLabel = i18nCategoryLabel(resolvedLang, section);
const categoryKey = categorySlug(resolvedLang, section);
const headerProps = {
  lang: resolvedLang,
  title,
  ...(description ? { description } : {}),
  ...(image ? { image } : {}),
  ...(imageAlt ? { imageAlt } : {}),
  ...(publishedTime ? { publishedTime } : {}),
  ...(modifiedTime ? { modifiedTime } : {}),
  ...(canonical ? { canonical } : {}),
  ...(typeof noindex === 'boolean' ? { noindex } : {}),
  ...(author ? { authorName: author } : {}),
  ...(authorUrl ? { authorUrl } : {}),
  ...(section ? { section } : {}),
  ...(Array.isArray(tags) && tags.length ? { tags } : {}),
};
---

<MainLayout lang={resolvedLang}>
  <BaseHeader {...headerProps} slot="head" />
  <Prose>
    <header class="mb-6">
      <h1 class="mb-3 text-center text-3xl font-bold tracking-tight sm:text-4xl">{title}</h1>
    </header>
  </Prose>

  {
    Astro.props.noProse ? (
      <slot />
    ) : (
      <Prose>
        <slot />
        {(publishedTime || modifiedTime) && (
          <p class="mt-6 text-xs text-neutral-500 dark:text-neutral-400">
            {publishedTime && (
              <>
                {t(resolvedLang, 'post.publishedAt')}: {fmt(publishedTime)}
              </>
            )}
            {publishedTime && modifiedTime && ' Â· '}
            {modifiedTime && (
              <>
                {t(resolvedLang, 'post.modifiedAt')}: {fmt(modifiedTime)}
              </>
            )}
          </p>
        )}
        {(section || author) && (
          <div class="mt-2 flex items-center justify-between">
            {author ? (
              <div class="flex items-center gap-3 text-xs text-neutral-600 dark:text-neutral-300">
                <Image
                  src={authorAvatar}
                  alt={author}
                  width={32}
                  height={32}
                  class="rounded-full"
                />
                {authorUrl ? (
                  <a href={authorUrl} class="no-underline hover:no-underline focus:no-underline">
                    {author}
                  </a>
                ) : (
                  <span>{author}</span>
                )}
              </div>
            ) : (
              <span />
            )}
            <div class="flex items-center gap-2">
              {section ? (
                <a
                  href={getRelativeLocaleUrl(
                    resolvedLang,
                    `/category/${encodeURIComponent(categoryKey ?? '')}`,
                  )}
                  class="inline-flex items-center rounded-full bg-neutral-100 px-2.5 py-0.5 text-xs font-medium text-neutral-700 no-underline hover:bg-neutral-200 hover:no-underline focus:no-underline dark:bg-neutral-800 dark:text-neutral-300"
                  aria-label={`Category: ${categoryLabel}`}
                >
                  {categoryLabel}
                </a>
              ) : (
                <span />
              )}
              {/** Views removed */}
            </div>
          </div>
        )}
      </Prose>
    )
  }
  <slot name="after" />
</MainLayout>
