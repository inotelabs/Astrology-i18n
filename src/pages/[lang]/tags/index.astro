---
import { getCollection } from 'astro:content';
import LandingLayout from '@/layouts/LandingLayout.astro';
import type { Lang } from '@/utils/i18n';
import { DEFAULT_LANG, SUPPORTED_LANGS } from '@/utils/i18n';
import { t } from '@/utils/translations';

export async function getStaticPaths() {
  return SUPPORTED_LANGS.map((lang) => ({ params: { lang } }));
}

const lang = ((Astro.params.lang as Lang) || DEFAULT_LANG) as Lang;

const all = await getCollection('post', (p) => !p.data.draft && p.data.locales === lang);

const TAG_KEYS = [
  'reflect',
  'media',
  'roam',
  'risk',
  'strategy',
  'allocation',
  'innovation',
  'model',
  'management',
] as const;

function countFor(key: (typeof TAG_KEYS)[number]) {
  const translated = String(t(lang as any, `tags.${key}`)).toLowerCase();
  return all.filter((p) => {
    const tags = (p.data.tags || []).map((x: string) => String(x).toLowerCase());
    return tags.includes(translated) || tags.includes(String(key));
  }).length;
}

const items = TAG_KEYS.map((key) => ({
  key,
  label: String(t(lang as any, `tags.${key}`)),
  href: `/${lang}/tags/${key}/`,
  count: countFor(key),
}));

const pageTitle = t(lang, 'pages.tags.title');
const description = t(lang, 'pages.tags.description');
---

<LandingLayout
  lang={lang}
  title={pageTitle}
  description={description}
  canonical={Astro.url.href}
  centered={false}
>
  <section>
    <h2 class="mb-4 text-lg font-semibold">{t(lang, 'pages.tags.h2')}</h2>
    <div class="grid grid-cols-3 gap-4">
      {
        items.map((it) => (
          <a
            href={it.href}
            class="inline-flex w-full items-center gap-2 rounded-full border border-neutral-200/70 px-3 py-1.5 text-sm text-neutral-800 hover:bg-neutral-50 dark:border-neutral-800/70 dark:text-neutral-200 dark:hover:bg-neutral-800"
          >
            <span class="min-w-0 flex-1 truncate">{it.label}</span>
            <span class="shrink-0 rounded-full bg-neutral-100 px-2 py-0.5 text-xs text-neutral-600 dark:bg-neutral-800 dark:text-neutral-400">
              {it.count}
            </span>
          </a>
        ))
      }
    </div>
  </section>
</LandingLayout>
